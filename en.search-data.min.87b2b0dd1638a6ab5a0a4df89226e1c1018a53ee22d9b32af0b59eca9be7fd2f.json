[{"id":0,"href":"/post/notes/","title":"Notes","section":"Posts","content":"Hugo #  1. 安装Hugo #   ubantu系统 下载Hugo官方下载  # 第一种方法 apt-get install hugo # 第二种方法 # 1. 切换到家目录 cd ~ # 使用wget下载hugo wget https://github.com/gohugoio/hugo/releases/download/v0.108.0/hugo_0.108.0_linux-arm64.deb # 安装dpkg包 sudo dpkg -i hugo*.deb 检查是否安装成功  hugo version # 打印出当前的版本 运行hugo，还需要安装hugo主题，但获取hugo主题，需要克隆hugo主题的git存储库，因此需要安装git  sudo apt-get update sudo apt-get install git 测试git是否安装  git ​\t结果如下\n​\t在家目录下创建blog站点  cd ~ hugo new site myblog #myblog是项目名 myblog下的目录如下  myblog ├── archetypes │ └── default.md ├── assets ├── config.toml # 博客站点的配置文件 ├── content\t# 博客文章所在的目录\t ├── data ├── layouts\t# 网站布局 ├── public\t├── static\t# 一些静态内容 └── themes\t# 博客主题  hugo目录结构部分详解\n config.toml\t站点全局的参数配置文件 archetypes Hugo的markdown文件中前置数据Front Matter定义的结构，默认使用的是default.md文件，可以自定义，然后在config.toml中指定自定义的结构文件，打开default.md文件。 content 存放网页内容的目录，编写的markdown文件都存放在此目录 data 用来存放数据文件，一般是json文件 layouts 存放自定义的模板文件，Hugo优先使用layouts目录下的模板，未发现再去themes目录下查找 static 存放静态文件，比如css、js、img等文件目录，Hugo在渲染时，会直接将static目录下的文件直接复制到public目录下，不会做任何渲染。 themes 存放网站主题，可以下载多个主题，themes目录下的每个子目录代表了一个主题   在站点目录下初始化git存储库  cd ~/myblog git init 配置git的名称和电子邮件地址  git config --global user.name \u0026quot;Your Name\u0026quot; git config --global user.email \u0026quot;user@email.com\u0026quot; 安装主题   官方主题下载：hugo主题\n ​\t在myblog目录，将要下载的主题克隆到themes目录下\n# clone 到themes/stack下，stack是 为主题hugo-theme-stack起的名称 git clone https://github.com/CaiJimmy/hugo-theme-stack.git ./themes/stack 将主题配置到配置文件中  echo 'theme=\u0026quot;book\u0026quot; '\u0026gt;\u0026gt; config.toml # 或者在config.toml下加入 theme=\u0026quot;stack“ 新建页面文章  hugo new post/test.md # test.md内容 --- title: \u0026#34;My First Post\u0026#34; date: 2022-12-13T15:50:03+08:00 draft: false ---  生成的 md 文件在myblog/context/post目录下\n ​\tdraft ：如果设置为true，将标记页面未准备好发布\n​\t将draft设置为false,则启动hugo时无需加 -D参数，便可以显示文章内容\n 启用hugo服务器\nhugo本身可以作为web服务器，输入以下命令\n  # 在本地启动hugo，显示网站页面，但不显示草稿即draft为true的文章 hugo server # 选项 -t 选定的主题 # 指定主题  ​\t启用草稿的情况下，启用服务器要使用以下命令：\nhugo server -D  其他选项  --bind 指定我们希望在所有接口上使该站点可用 --bindUrl 设置网站的域名或IP地址 -D 等价于 draft=true 表示显示草稿的页面 -F 表示指定内容的时间 # 例子 hugo server --bind=0.0.0.0 --baseUrl=http://your_domain_or_IP/ -D -F  修改bindUrl，到config.toml ，找到baseURL = ' http://本地ip或localhost /'\n  本地结果显示\n在本地上可看到刚才写的文章。\n  使用hugo建立网站\nhugo可以获取Markdown文件，应用配置和主题中定义的设置，并呈现将向访问者显示的实际HTML页面。要构建您的网站，只需输入：\nhugo 这将生成自己目录下的页面，并将所有呈现的内容放入服务器上的public目录中。并且可以将此目录的内容传输到Web服务器以部署和提供内容。\n **注意：**每次构建后，ugo都不会清理输出目录。这意味着过去的内容可能会从之前的版本中保留在公共目录中。Hugo开发人员建议您在每次构建后删除public目录，以便可以全新地重新创建内容。\n   2. 配置Hugo #  3. 将个人博客部署到远程服务器Github #    新建一个新仓库 #  仓库地址的填写格式为 用户名小写.github.io,创建完后便可通过http://name.github.io访问自己的博客。\n  使用hugo生成静态网页 #    hugo --baseUrl=\u0026#34;https://yhs-coder.github.io\u0026#34; # --baseUrl=\u0026#34;https://yhs-coder.github.io\u0026#34; 指定Github Page地址,不是仓库的地址  上传到Github #     将public文件夹创建成git地址  cd public git init  将所有文件添加进去  git add *  提交  git commit -m \u0026#39;first commit\u0026#39;  本地仓库（public文件夹）与远程仓库关联：  # 分支重命名为codes git branch -M codes # 第一种：使用ssh方式远程添加仓库（选择这种） git remote add origin git@github.com:yhs-coder/yhs-coder.github.io.git # 第二种：使用https方式: git remote add origin https://github.com/yhs-coder/yhs-coder.github.io.git  相关知识：\n# 添加远程分支 git remote add origin ssh/https链接 # 删除远程分支 git remote rm origin # 查看远程仓库的具体信息 git remote show origin #查看远程仓库的数量 git remote -v # 指定仓库和分支，而git push只是他的简写，并且没有指定仓库和分支 git push origin master   将博客推送到远程仓库，即将代码推送到远程仓库，输入以下命令，用于保存密码  # git config --global credential.helper store # 推送到上 git push -u origin codes  问题：git@github.com: Permission denied (publickey). fatal: 无法读取远程仓库。\n请确认您有正确的访问权限并且仓库存在。\n**原因：**没有在github服务器设置SSH账户\n解决方法：\n（1）首先查看主目录下是否有.ssh目录，如果没有，则通过以下命令，创建SSH Key\nssh-keygen -t rsa -C \u0026#34;yhs6666@outlook.com\u0026#34; 一路使用默认（不用输入啥）回车。生成的ssh文件目录如下：\nEnter file in which to save the key (/home/do_myself/.ssh/id_rsa): \n在生成的.ssh目录里，id_rsa是私钥， id_rsa.pub是公钥。\n（2）在Github中添加私钥\n点击头像，点击setting, 找到SSH and GPG keys，点击“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容，此时就完成了添加SSH账户。\n（3）打开终端，输入以下命令，让本地的git仓库和的ssh key 关联\nssh-add \u0026#34;/home/do_myself/.ssh/id_rsa\u0026#34; # ssh-add \u0026#34;id_rsa的文件地址\u0026#34; 此时就可以将本地库的内容上传到远程Github上的仓库啦！\ngit push origin codes  "},{"id":1,"href":"/post/test/","title":"My First Post","section":"Posts","content":"Test #  This is my first post on the site. #   welcome\n "},{"id":2,"href":"/post/blog/","title":"My first blog","section":"Posts","content":"Hugo #  1. 安装Hugo #  看看能不能显示？？？  ubantu系统 下载Hugo官方下载  # 下载压缩包 wget https://github.com/gohugoio/hugo/releases/download/v0.81.0/hugo_0.81.0_Linux-64bit.tar.gz # 解压 tar -xzvf hugo_0.81.0_Linux-64bit.tar.gz sudo cp ./hugo /usr/local/bin 检查是否安装成功  hugo version 创建blog站点  hugo new site myblog #myblog是项目名 myblog下的目录如下  myblog ├── archetypes │ └── default.md ├── assets ├── config.toml # 博客站点的配置文件 ├── content\t# 博客文章所在的目录\t ├── data ├── layouts\t# 网站布局 ├── public\t├── static\t# 一些静态内容 └── themes\t# 博客主题 安装主题   官方主题下载：hugo主题\n 在myblog目录，将要下载的主题克隆到themes目录下\n# 切到自己的站点 cd myblog # 初始化git git init # clone 到themes/stack下，stack是 为主题hugo-theme-stack起的名称 git clone https://github.com/CaiJimmy/hugo-theme-stack.git ./themes/stack git clone https://github.com/CaiJimmy/hugo-theme-stack.git themes/stack 将主题配置到配置文件中  echo 'theme=\u0026quot;book\u0026quot; '\u0026gt;\u0026gt; config.toml # 或者直接在config.toml下加入 theme=\u0026quot;stack“ 新建文章  hugo new post/blog.md #blog.md内容 title: \u0026#34;Blog\u0026#34; date: 2022-12-07T23:23:48+08:00 draft: true  生成的 md 文件在myblog/context/post目录下\n 启用hugo服务器  hugo server # 选项 -t 选定的主题 # 指定主题  启用草稿的情况下，启用服务器要使用以下命令：\nhugo server -D 写一篇文章  "}]